{"ast":null,"code":"import _toConsumableArray from \"/Users/admin/Desktop/GITHUB2021/Ethergram/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/admin/Desktop/GITHUB2021/Ethergram/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/GITHUB2021/Ethergram/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/admin/Desktop/GITHUB2021/Ethergram/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/admin/Desktop/GITHUB2021/Ethergram/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Desktop/GITHUB2021/Ethergram/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/admin/Desktop/GITHUB2021/Ethergram/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/admin/Desktop/GITHUB2021/Ethergram/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/admin/Desktop/GITHUB2021/Ethergram/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/admin/Desktop/GITHUB2021/Ethergram/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport Ethergram from '../abis/Ethergram.json';\nimport Navbar from './Navbar';\nimport Main from './Main'; //Declare IPFS\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https'\n}); // leaving out the arguments will default to these values\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, ethergram, imagesCount, i, image;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; // Load account\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                }); // Network ID\n\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkData = Ethergram.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 29;\n                  break;\n                }\n\n                ethergram = new web3.eth.Contract(Ethergram.abi, networkData.address);\n                this.setState({\n                  ethrergram: ethrergram\n                });\n                _context3.next = 14;\n                return ethergram.methods.imageCount().call();\n\n              case 14:\n                imagesCount = _context3.sent;\n                this.setState({\n                  imagesCount: imagesCount\n                }); // Load images\n\n                i = 1;\n\n              case 17:\n                if (!(i <= imagesCount)) {\n                  _context3.next = 25;\n                  break;\n                }\n\n                _context3.next = 20;\n                return ethergram.methods.images(i).call();\n\n              case 20:\n                image = _context3.sent;\n                this.setState({\n                  images: [].concat(_toConsumableArray(this.state.images), [image])\n                });\n\n              case 22:\n                i++;\n                _context3.next = 17;\n                break;\n\n              case 25:\n                // Sort images. Show highest tipped images first\n                this.setState({\n                  images: this.state.images.sort(function (a, b) {\n                    return b.tipAmount - a.tipAmount;\n                  })\n                });\n                this.setState({\n                  loading: false\n                });\n                _context3.next = 30;\n                break;\n\n              case 29:\n                window.alert('Decentragram contract not deployed to detected network.');\n\n              case 30:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"tipImageOwner\",\n    value: function tipImageOwner(id, tipAmount) {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n      this.state.ethergram.methods.tipImageOwner(id).send({\n        from: this.state.account,\n        value: tipAmount\n      }).on('transactionHash', function (hash) {\n        _this2.setState({\n          loading: false\n        });\n      });\n    }\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.captureFile = function (event) {\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          buffer: Buffer(reader.result)\n        });\n\n        console.log('buffer', _this.state.buffer);\n      };\n    };\n\n    _this.uploadImage = function (description) {\n      console.log(\"Submitting file to ipfs...\"); //adding file to the IPFS\n\n      ipfs.add(_this.state.buffer, function (error, result) {\n        console.log('Ipfs result', result);\n\n        if (error) {\n          console.error(error);\n          return;\n        }\n\n        _this.setState({\n          loading: true\n        });\n\n        _this.state.ethergram.methods.uploadImage(result[0].hash, description).send({\n          from: _this.state.account\n        }).on('transactionHash', function (hash) {\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      account: '',\n      decentragram: null,\n      images: [],\n      loading: true\n    };\n    _this.uploadImage = _this.uploadImage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.tipImageOwner = _this.tipImageOwner.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.captureFile = _this.captureFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        account: this.state.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), this.state.loading ? React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"text-center mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Loading...\")) : React.createElement(Main, {\n        tipImageOwner: this.state.tipImageOwner,\n        images: this.state.images,\n        captureFile: this.captureFile,\n        uploadImage: this.uploadImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/admin/Desktop/GITHUB2021/Ethergram/src/components/App.js"],"names":["React","Component","Web3","Ethergram","Navbar","Main","ipfsClient","require","ipfs","host","port","protocol","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","net","getId","networkId","networkData","networks","ethergram","Contract","abi","address","ethrergram","methods","imageCount","call","imagesCount","i","images","image","state","sort","a","b","tipAmount","loading","id","tipImageOwner","send","from","value","on","hash","props","captureFile","event","preventDefault","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","console","log","uploadImage","description","add","error","decentragram","bind"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;;AACA,IAAMC,UAAU,GAAGC,OAAO,CAAC,kBAAD,CAA1B;;AACA,IAAMC,IAAI,GAAGF,UAAU,CAAC;AAAEG,EAAAA,IAAI,EAAE,gBAAR;AAA0BC,EAAAA,IAAI,EAAE,IAAhC;AAAsCC,EAAAA,QAAQ,EAAE;AAAhD,CAAD,CAAvB,C,CAAmF;;IAE7EC,G;;;;;;;;;;;;;;;;uBAGI,KAAKC,QAAL,E;;;;uBACA,KAAKC,kBAAL,E;;;;;;;;;;;;;;;;;;;;;;;;;;qBAIFC,MAAM,CAACC,Q;;;;;AACTD,gBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIf,IAAJ,CAASa,MAAM,CAACC,QAAhB,CAAd;;uBACMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,E;;;;;;;AAEH,oBAAIH,MAAM,CAACE,IAAX,EAAiB;AACpBF,kBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIf,IAAJ,CAASa,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACD,iBAFI,MAGA;AACHJ,kBAAAA,MAAM,CAACK,KAAP,CAAa,qEAAb;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIKH,gBAAAA,I,GAAOF,MAAM,CAACE,I,EACpB;;;uBACuBA,IAAI,CAACI,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;AACN,qBAAKC,QAAL,CAAc;AAAEC,kBAAAA,OAAO,EAAEF,QAAQ,CAAC,CAAD;AAAnB,iBAAd,E,CACA;;;uBACwBN,IAAI,CAACI,GAAL,CAASK,GAAT,CAAaC,KAAb,E;;;AAAlBC,gBAAAA,S;AACAC,gBAAAA,W,GAAc1B,SAAS,CAAC2B,QAAV,CAAmBF,SAAnB,C;;qBACjBC,W;;;;;AACKE,gBAAAA,S,GAAY,IAAId,IAAI,CAACI,GAAL,CAASW,QAAb,CAAsB7B,SAAS,CAAC8B,GAAhC,EAAqCJ,WAAW,CAACK,OAAjD,C;AAClB,qBAAKV,QAAL,CAAc;AAAEW,kBAAAA,UAAU,EAAVA;AAAF,iBAAd;;uBAC0BJ,SAAS,CAACK,OAAV,CAAkBC,UAAlB,GAA+BC,IAA/B,E;;;AAApBC,gBAAAA,W;AACN,qBAAKf,QAAL,CAAc;AAAEe,kBAAAA,WAAW,EAAXA;AAAF,iBAAd,E,CACA;;AACSC,gBAAAA,C,GAAI,C;;;sBAAGA,CAAC,IAAID,W;;;;;;uBACCR,SAAS,CAACK,OAAV,CAAkBK,MAAlB,CAAyBD,CAAzB,EAA4BF,IAA5B,E;;;AAAdI,gBAAAA,K;AACN,qBAAKlB,QAAL,CAAc;AACZiB,kBAAAA,MAAM,+BAAM,KAAKE,KAAL,CAAWF,MAAjB,IAAyBC,KAAzB;AADM,iBAAd;;;AAFgCF,gBAAAA,CAAC,E;;;;;AAMnC;AACA,qBAAKhB,QAAL,CAAc;AACZiB,kBAAAA,MAAM,EAAE,KAAKE,KAAL,CAAWF,MAAX,CAAkBG,IAAlB,CAAuB,UAACC,CAAD,EAAGC,CAAH;AAAA,2BAASA,CAAC,CAACC,SAAF,GAAcF,CAAC,CAACE,SAAzB;AAAA,mBAAvB;AADI,iBAAd;AAGA,qBAAKvB,QAAL,CAAc;AAAEwB,kBAAAA,OAAO,EAAE;AAAX,iBAAd;;;;;AAEAjC,gBAAAA,MAAM,CAACK,KAAP,CAAa,yDAAb;;;;;;;;;;;;;;;;;;kCAmCU6B,E,EAAIF,S,EAAW;AAAA;;AAC3B,WAAKvB,QAAL,CAAc;AAAEwB,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,WAAKL,KAAL,CAAWZ,SAAX,CAAqBK,OAArB,CAA6Bc,aAA7B,CAA2CD,EAA3C,EAA+CE,IAA/C,CAAoD;AAAEC,QAAAA,IAAI,EAAE,KAAKT,KAAL,CAAWlB,OAAnB;AAA4B4B,QAAAA,KAAK,EAAEN;AAAnC,OAApD,EAAoGO,EAApG,CAAuG,iBAAvG,EAA0H,UAACC,IAAD,EAAU;AAClI,QAAA,MAAI,CAAC/B,QAAL,CAAc;AAAEwB,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD,OAFD;AAGD;;;AAED,eAAYQ,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAtCnBC,WAsCmB,GAtCL,UAAAC,KAAK,EAAI;AAErBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACA,UAAMC,MAAM,GAAG,IAAIhD,MAAM,CAACiD,UAAX,EAAf;AACAD,MAAAA,MAAM,CAACE,iBAAP,CAAyBL,IAAzB;;AAEAG,MAAAA,MAAM,CAACG,SAAP,GAAmB,YAAM;AACvB,cAAK1C,QAAL,CAAc;AAAE2C,UAAAA,MAAM,EAAEC,MAAM,CAACL,MAAM,CAACM,MAAR;AAAhB,SAAd;;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,MAAK5B,KAAL,CAAWwB,MAAjC;AACD,OAHD;AAID,KA2BkB;;AAAA,UAzBnBK,WAyBmB,GAzBL,UAAAC,WAAW,EAAI;AAC3BH,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAD2B,CAG3B;;AACA/D,MAAAA,IAAI,CAACkE,GAAL,CAAS,MAAK/B,KAAL,CAAWwB,MAApB,EAA4B,UAACQ,KAAD,EAAQN,MAAR,EAAmB;AAC7CC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,MAA3B;;AACA,YAAGM,KAAH,EAAU;AACRL,UAAAA,OAAO,CAACK,KAAR,CAAcA,KAAd;AACA;AACD;;AAED,cAAKnD,QAAL,CAAc;AAAEwB,UAAAA,OAAO,EAAE;AAAX,SAAd;;AACA,cAAKL,KAAL,CAAWZ,SAAX,CAAqBK,OAArB,CAA6BoC,WAA7B,CAAyCH,MAAM,CAAC,CAAD,CAAN,CAAUd,IAAnD,EAAyDkB,WAAzD,EAAsEtB,IAAtE,CAA2E;AAAEC,UAAAA,IAAI,EAAE,MAAKT,KAAL,CAAWlB;AAAnB,SAA3E,EAAyG6B,EAAzG,CAA4G,iBAA5G,EAA+H,UAACC,IAAD,EAAU;AACvI,gBAAK/B,QAAL,CAAc;AAAEwB,YAAAA,OAAO,EAAE;AAAX,WAAd;AACD,SAFD;AAGD,OAXD;AAYD,KASkB;;AAEjB,UAAKL,KAAL,GAAa;AACXlB,MAAAA,OAAO,EAAE,EADE;AAEXmD,MAAAA,YAAY,EAAE,IAFH;AAGXnC,MAAAA,MAAM,EAAE,EAHG;AAIXO,MAAAA,OAAO,EAAE;AAJE,KAAb;AAOA,UAAKwB,WAAL,GAAmB,MAAKA,WAAL,CAAiBK,IAAjB,uDAAnB;AACA,UAAK3B,aAAL,GAAqB,MAAKA,aAAL,CAAmB2B,IAAnB,uDAArB;AACA,UAAKpB,WAAL,GAAmB,MAAKA,WAAL,CAAiBoB,IAAjB,uDAAnB;AAXiB;AAYlB;;;;6BACQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKlC,KAAL,CAAWlB,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEI,KAAKkB,KAAL,CAAWK,OAAX,GACE;AAAK,QAAA,EAAE,EAAC,QAAR;AAAiB,QAAA,SAAS,EAAC,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA9C,CADF,GAEE,oBAAC,IAAD;AACE,QAAA,aAAa,EAAE,KAAKL,KAAL,CAAWO,aAD5B;AAEE,QAAA,MAAM,EAAG,KAAKP,KAAL,CAAWF,MAFtB;AAGE,QAAA,WAAW,EAAE,KAAKgB,WAHpB;AAIE,QAAA,WAAW,EAAE,KAAKe,WAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJN,CADF;AAcD;;;;EApHevE,S;;AAuHlB,eAAeW,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport Ethergram from '../abis/Ethergram.json';\nimport Navbar from './Navbar';\nimport Main from './Main';\n\n//Declare IPFS\nconst ipfsClient = require('ipfs-http-client')\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    // Network ID\n    const networkId = await web3.eth.net.getId()\n    const networkData = Ethergram.networks[networkId]\n    if(networkData) {\n      const ethergram = new web3.eth.Contract(Ethergram.abi, networkData.address)\n      this.setState({ ethrergram })\n      const imagesCount = await ethergram.methods.imageCount().call()\n      this.setState({ imagesCount })\n      // Load images\n      for (var i = 1; i <= imagesCount; i++) {\n        const image = await ethergram.methods.images(i).call()\n        this.setState({\n          images: [...this.state.images, image]\n        })\n      }\n      // Sort images. Show highest tipped images first\n      this.setState({\n        images: this.state.images.sort((a,b) => b.tipAmount - a.tipAmount )\n      })\n      this.setState({ loading: false})\n    } else {\n      window.alert('Decentragram contract not deployed to detected network.')\n    }\n  }\n\n  captureFile = event => {\n\n    event.preventDefault()\n    const file = event.target.files[0]\n    const reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) })\n      console.log('buffer', this.state.buffer)\n    }\n  }\n\n  uploadImage = description => {\n    console.log(\"Submitting file to ipfs...\")\n\n    //adding file to the IPFS\n    ipfs.add(this.state.buffer, (error, result) => {\n      console.log('Ipfs result', result)\n      if(error) {\n        console.error(error)\n        return\n      }\n\n      this.setState({ loading: true })\n      this.state.ethergram.methods.uploadImage(result[0].hash, description).send({ from: this.state.account }).on('transactionHash', (hash) => {\n        this.setState({ loading: false })\n      })\n    })\n  }\n\n  tipImageOwner(id, tipAmount) {\n    this.setState({ loading: true })\n    this.state.ethergram.methods.tipImageOwner(id).send({ from: this.state.account, value: tipAmount }).on('transactionHash', (hash) => {\n      this.setState({ loading: false })\n    })\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      decentragram: null,\n      images: [],\n      loading: true\n    }\n\n    this.uploadImage = this.uploadImage.bind(this)\n    this.tipImageOwner = this.tipImageOwner.bind(this)\n    this.captureFile = this.captureFile.bind(this)\n  }\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        { this.state.loading\n          ? <div id=\"loader\" className=\"text-center mt-5\"><p>Loading...</p></div>\n          : <Main\n              tipImageOwner={this.state.tipImageOwner}\n              images= {this.state.images}\n              captureFile={this.captureFile}\n              uploadImage={this.uploadImage}\n            />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}